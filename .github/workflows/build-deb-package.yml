name: Build Debian Package

# This workflow can be triggered manually from the GitHub UI
on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Branch, tag or commit SHA to build from'
        required: false
        default: 'master'
        type: string
      version:
        description: 'Version number for this release (e.g., 2.0.6786)'
        required: false
        type: string
      release_name:
        description: 'Release name'
        required: false
        type: string
      prerelease:
        description: 'Mark as pre-release'
        required: false
        default: false
        type: boolean
      draft:
        description: 'Create as draft release'
        required: false
        default: false
        type: boolean
  # Adding push event to make workflow visible
  push:
    branches:
      - master

# Add permissions needed for creating releases
permissions:
  contents: write

jobs:
  build-deb:
    name: Build Debian Package
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.ref || 'master' }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.nvmrc'
        cache: 'npm'
    
    - name: Check Node / npm versions
      run: |
        node -v
        npm -v
    
    - name: Install dependencies
      run: npm install
    
    - name: Build frontend
      run: make
    
    - name: Install Debian packaging tools
      run: sudo apt-get update && sudo apt-get install -y debhelper devscripts lintian
    
    - name: Build Debian package
      run: |
        dpkg-buildpackage -A -rfakeroot -us -uc -d
        make source-package
    
    - name: List generated files
      run: ls -la ../*.deb ../*.changes ../*.dsc ../*.tar.* || true
    
    - name: Create artifacts directory and copy files
      run: |
        mkdir -p ./artifacts
        cp -v ../*.deb ../*.changes ../*.dsc ../*.tar.* ./artifacts/ || true
    
    - name: Upload Debian packages
      uses: actions/upload-artifact@v4
      with:
        name: debian-packages
        path: ./artifacts
        retention-days: 7
        if-no-files-found: warn
    
    # Extract package version from package.json if not provided
    - name: Extract version information
      id: package-version
      if: github.event.inputs.version == ''
      run: |
        VERSION=$(node -p "require('./package.json').version")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"
    
    # Generate changelog from git commits
    - name: Generate changelog
      id: changelog
      run: |
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        echo "## Changes in this release" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        git log -n 10 --pretty=format:"* %s (%h)" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    # Create a GitHub release with the built packages
    - name: Create Release
      id: create_release
      if: github.event_name == 'workflow_dispatch'
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.version || steps.package-version.outputs.version }}
        name: ${{ github.event.inputs.release_name || format('Release v{0}', github.event.inputs.version || steps.package-version.outputs.version) }}
        draft: ${{ github.event.inputs.draft || false }}
        prerelease: ${{ github.event.inputs.prerelease || false }}
        body: |
          # Jitsi Meet Release
          
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ## Installation
          
          Download the appropriate .deb file for your system and install with:
          ```
          sudo dpkg -i jitsi-meet_*.deb
          sudo apt-get install -f
          ```
        files: |
          ./artifacts/*.deb
          ./artifacts/*.changes
          ./artifacts/*.dsc
          ./artifacts/*.tar.*
